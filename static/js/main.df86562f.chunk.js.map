{"version":3,"sources":["logo.svg","serviceWorker.js","components/square.jsx","components/board.jsx","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Square","state","styleButton","backgroundColor","width","height","margin","padding","verticalAlign","styleMargin","display","marginLeft","styleWhiteButton","borderRadius","align","border","styleBlackButton","styleGreenButton","Fragment","this","funcMargin","style","onClick","props","handleOnClick","square","id","getWhoOwns","newLine","value","Component","Board","imageUrl","turn","squares","playerWhiteScore","playerBlackScore","styleScreen","styleImg1","float","styleImg2","styleHeadingText","textAlign","squareID","z","map","sq","upChanges","checkUp","i","length","downChanges","checkDown","rightChanges","checkRight","leftChanges","checkLeft","leftUpChanges","checkLeftUp","rightUpChanges","checkRightUp","leftDownChanges","checkLeftDown","rightDownChanges","checkRightDown","setState","zz","change","y","push","src","putID","styleCentre","key","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.df86562f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\n\nclass Square extends Component {\n    state = {  \n\n    }\n\n    styleButton = {\n        backgroundColor:'#99ff99',\n        width:100,\n        height:100,\n        margin:0,\n        padding:0,\n        verticalAlign:'middle',\n    };\n \n    styleMargin = {\n        display:'inline-block',\n       marginLeft:'28%',\n       // padding:100\n    }\n\n    styleWhiteButton = {\n        display:\"inline-block\",\n        height: 75,\n        width: 75,\n        borderRadius: \"50%\",   \n        align : \"center\",\n        verticalAlign:'middle',\n        backgroundColor:'white',\n        border:0,\n    }\n    \n    styleBlackButton = {\n        display:\"inline-block\",\n        height: 75,\n        width: 75,\n        borderRadius: \"50%\",   \n        align : \"center\",\n        verticalAlign:'middle',\n        backgroundColor: 'black',\n        border:0,\n    }\n    styleGreenButton = {\n        display:\"inline-block\",\n        height: 75,\n        width: 75,\n        borderRadius: \"50%\",   \n        align : \"center\",\n        verticalAlign:'middle',\n        backgroundColor: '#99ff99',\n        border:0,\n    }\n\n    render() { \n        return (\n            <React.Fragment>\n                {this.funcMargin()}\n                <button style={this.styleButton}\n                onClick={ () => this.props.handleOnClick(this.props.square.id)}>\n                    <button style={this.getWhoOwns()}>\n\n                    </button>\n                </button>\n                {this.newLine()}\n            </React.Fragment>\n          );\n    }\n\n    getWhoOwns()\n    {\n        let value = this.props.square.value;\n        if(value === 0) return this.styleGreenButton;\n        if(value === 2) return this.styleBlackButton;\n        return this.styleWhiteButton\n    }\n\n    funcMargin()\n    {\n        let a = this.props.square.id;\n        if(a%8 === 0) \n            return <div style={this.styleMargin}></div> ; \n        return <span></span>;\n    }\n\n    newLine()\n    {\n        let b = this.props.square.id;\n        if(b%8 === 7) return <br/>\n        return <span></span> \n    }\n}\n \nexport default Square;","import React, { Component } from 'react';\nimport Square from './square'\n\nclass Board extends Component {\n    state = { \n        imageUrl : 'jai_Ganesh_Deva.jpeg',\n        turn : 1,\n        squares : [],\n        playerWhiteScore : 0,\n        playerBlackScore : 0,\n    }\n\n    styleScreen = {\n        backgroundColor:'yellow'\n    }\n    \n    styleImg1 = {\n        display : 'inline-block',\n        float:'left',\n        margin:5,\n        width:300,\n        height:200,\n    };\n\n    styleImg2 = {\n        display : 'inline-block',\n        float:'right',\n        margin:5,\n        width:300,\n        height:200,\n    };\n\n    styleHeadingText = {\n        textAlign:'center',\n        height:75,\n        padding: 75,\n        margin:'auto',\n        width : '50%',\n    }\n\n    checkUp(squareID , zz){\n        let squares = this.state.squares;\n        let change = [];\n        let y = 0;\n            \n        squareID-=8;\n        while(squareID>=0)\n        {\n            if(squares[squareID].value === zz)\n            {\n                change.push(squareID);\n            }\n            else\n            {\n                if(squares[squareID].value !== 0)\n                {\n                    y=1;\n                }\n                break;\n            }\n            squareID-=8;\n        }\n        if(y === 1)\n        {        \n            return change;   \n        }\n        else return [];   \n    }\n    \n    checkDown(squareID , zz){\n        let squares = this.state.squares;\n        let change = [];\n        let y = 0;\n            \n        squareID+=8;\n        while(squareID<64)\n        {\n            if(squares[squareID].value === zz)\n            {\n                change.push(squareID);\n            }\n            else\n            {\n                if(squares[squareID].value !== 0)\n                {\n                    y=1;\n                }\n                break;\n            }\n            squareID+=8;\n        }\n        if(y === 1)\n        {        \n            return change;   \n        }\n        else return [];\n    }\n\n    checkRight(squareID , zz){\n        let squares = this.state.squares;\n        let change = [];\n        let y = 0;\n            \n        squareID+=1;\n        while(squareID<64 && squareID%8 !== 0)\n        {\n            if(squares[squareID].value === zz)\n            {\n                change.push(squareID);\n            }\n            else\n            {\n                if(squares[squareID].value !== 0)\n                {\n                    y=1;\n                }\n                break;\n            }\n            squareID+=1;\n        }\n        if(y === 1)\n        {        \n            return change;   \n        }\n        else return [];\n    }\n\n    checkLeft(squareID , zz){\n        let squares = this.state.squares;\n        let change = [];\n        let y = 0;\n            \n        squareID-=1;\n        while(squareID>=0 && squareID%8 !== 7)\n        {\n            if(squares[squareID].value === zz)\n            {\n                change.push(squareID);\n            }\n            else\n            {\n                if(squares[squareID].value !== 0)\n                {\n                    y=1;\n                }\n                break;\n            }\n            squareID-=1;\n        }\n        if(y === 1)\n        {        \n            return change;   \n        }\n        else return [];\n    }\n    \n    checkLeftUp(squareID , zz)\n    {\n        let squares = this.state.squares;\n        let change = [];\n        let y = 0;\n            \n        squareID-=9;\n        while(squareID>=0    && squareID%8 !== 7)\n        {\n            if(squares[squareID].value === zz)\n            {\n                change.push(squareID);\n            }\n            else\n            {\n                if(squares[squareID].value !== 0)\n                {\n                    y=1;\n                }\n                break;\n            }\n            squareID-=9;\n        }\n        if(y === 1)\n        {        \n            return change;   \n        }\n        else return [];\n    }\n    \n    checkRightUp(squareID , zz)\n    {\n        let squares = this.state.squares;\n        let change = [];\n        let y = 0;\n            \n        squareID-=7;\n        while(squareID>=0    && squareID%8 !== 0)\n        {\n            if(squares[squareID].value === zz)\n            {\n                change.push(squareID);\n            }\n            else\n            {\n                if(squares[squareID].value !== 0)\n                {\n                    y=1;\n                }\n                break;\n            }\n            squareID-=7;\n        }\n        if(y === 1)\n        {        \n            return change;   \n        }\n        else return [];\n    }\n\n    checkRightDown(squareID , zz)\n    {\n        let squares = this.state.squares;\n        let change = [];\n        let y = 0;\n            \n        squareID+=9;\n        while(squareID<64    && squareID%8 !== 0)\n        {\n            if(squares[squareID].value === zz)\n            {\n                change.push(squareID);\n            }\n            else\n            {\n                if(squares[squareID].value !== 0)\n                {\n                    y=1;\n                }\n                break;\n            }\n            squareID+=9;\n        }\n        if(y === 1)\n        {        \n            return change;   \n        }\n        else return [];\n    }\n\n    checkLeftDown(squareID , zz)\n    {\n        let squares = this.state.squares;\n        let change = [];\n        let y = 0;\n            \n        squareID+=7;\n        while(squareID<64    && squareID%8 !== 7)\n        {\n            if(squares[squareID].value === zz)\n            {\n                change.push(squareID);\n            }\n            else\n            {\n                if(squares[squareID].value !== 0)\n                {\n                    y=1;\n                }\n                break;\n            }\n            squareID+=7;\n        }\n        if(y === 1)\n        {        \n            return change;   \n        }\n        else return [];\n    }\n    \n\n    handleOnClick  = (squareID) => {\n        let z=0;\n        let playerWhiteScore = this.state.playerWhiteScore;\n        let playerBlackScore = this.state.playerBlackScore;\n        \n        const squares = this.state.squares.map(sq=>{\n            if(sq.id === squareID)\n            {\n                if(sq.value === 0)\n                {\n                    if(this.state.turn%2 === 1)\n                        sq.value = 1 ;\n                    else sq.value = 2 ;\n                    z=1;            \n                }\n            }\n            return sq;\n        })\n        if(z === 1)\n        {\n            if(this.state.turn%2 === 1) playerWhiteScore+=1;\n            else playerBlackScore+=1; \n        }\n        if(z === 1)\n        {\n            let upChanges = this.checkUp(squareID,(squares[squareID].value === 1)?2:1);\n            for(let i=0;i<upChanges.length;i++)\n            {\n                squares[upChanges[i]].value = (squares[upChanges[i]].value === 1)?2:1;\n            }\n            let downChanges = this.checkDown(squareID,(squares[squareID].value === 1)?2:1);\n            for(let i=0;i<downChanges.length;i++)\n            {\n                squares[downChanges[i]].value = (squares[downChanges[i]].value === 1)?2:1;\n            }\n            let rightChanges = this.checkRight(squareID,(squares[squareID].value === 1)?2:1);\n            for(let i=0;i<rightChanges.length;i++)\n            {\n                squares[rightChanges[i]].value = (squares[rightChanges[i]].value === 1)?2:1;\n            }\n            let leftChanges = this.checkLeft(squareID,(squares[squareID].value === 1)?2:1);\n            for(let i=0;i<leftChanges.length;i++)\n            {\n                squares[leftChanges[i]].value = (squares[leftChanges[i]].value === 1)?2:1;\n            }\n            let leftUpChanges = this.checkLeftUp(squareID,(squares[squareID].value === 1)?2:1);\n            for(let i=0;i<leftUpChanges.length;i++)\n            {\n                squares[leftUpChanges[i]].value = (squares[leftUpChanges[i]].value === 1)?2:1;\n            }\n            let rightUpChanges = this.checkRightUp(squareID,(squares[squareID].value === 1)?2:1);\n            \n            for(let i=0;i<rightUpChanges.length;i++)\n            {\n                squares[rightUpChanges[i]].value = (squares[rightUpChanges[i]].value === 1)?2:1;\n            }\n            let leftDownChanges = this.checkLeftDown(squareID,(squares[squareID].value === 1)?2:1);\n            for(let i=0;i<leftDownChanges.length;i++)\n            {\n                squares[leftDownChanges[i]].value = (squares[leftDownChanges[i]].value === 1)?2:1;\n            }\n            let rightDownChanges = this.checkRightDown(squareID,(squares[squareID].value === 1)?2:1);\n            for(let i=0;i<rightDownChanges.length;i++)\n            {\n                squares[rightDownChanges[i]].value = (squares[rightDownChanges[i]].value === 1)?2:1;\n            }\n            if(this.state.turn%2 === 1)\n            {\n                 playerWhiteScore+=upChanges.length;\n                 playerBlackScore-=upChanges.length;\n                 playerWhiteScore+=downChanges.length;\n                 playerBlackScore-=downChanges.length;\n                 playerWhiteScore+=rightChanges.length;\n                 playerBlackScore-=rightChanges.length;\n                 playerWhiteScore+=leftChanges.length;\n                 playerBlackScore-=leftChanges.length;\n                 \n                 playerWhiteScore+=rightUpChanges.length;\n                 playerBlackScore-=rightUpChanges.length;\n                 playerWhiteScore+=rightDownChanges.length;\n                 playerBlackScore-=rightDownChanges.length;\n                 playerWhiteScore+=leftUpChanges.length;\n                 playerBlackScore-=leftUpChanges.length;\n                 playerWhiteScore+=leftDownChanges.length;\n                 playerBlackScore-=leftDownChanges.length;\n                    \n            }\n            else \n            {\n                playerWhiteScore-=upChanges.length;\n                playerBlackScore+=upChanges.length;\n                playerWhiteScore-=downChanges.length;\n                playerBlackScore+=downChanges.length;\n                playerWhiteScore-=rightChanges.length;\n                playerBlackScore+=rightChanges.length;\n                playerWhiteScore-=leftChanges.length;\n                playerBlackScore+=leftChanges.length;\n                \n                playerWhiteScore-=rightUpChanges.length;\n                 playerBlackScore+=rightUpChanges.length;\n                 playerWhiteScore-=rightDownChanges.length;\n                 playerBlackScore+=rightDownChanges.length;\n                 playerWhiteScore-=leftUpChanges.length;\n                 playerBlackScore+=leftUpChanges.length;\n                 playerWhiteScore-=leftDownChanges.length;\n                 playerBlackScore+=leftDownChanges.length;\n                 \n            }\n\n        }\n        \n        this.setState({squares , turn:this.state.turn+z , playerBlackScore,playerWhiteScore});\n    }\n\n    render() { \n        return (\n            <div style={this.styleScreen}>\n                <img src={this.state.imageUrl} style={this.styleImg1}/>\n                <img src={this.state.imageUrl} style={this.styleImg2}/>\n                <h1 style = {this.styleHeadingText} > Jai Ganesh Deva</h1>\n                {this.putID()}\n                <div style={this.styleCentre}>White : {this.state.playerWhiteScore} </div>\n                <div style={this.styleCentre}>Black : {this.state.playerBlackScore} </div>\n                \n                {this.state.squares.map(square =>\n                    <Square   \n                        key={square.id}\n                        square={square}\n                        handleOnClick = {this.handleOnClick}\n                    > \n                    </Square>  \n                )}\n                <br/><br/><br/><br/><br/><br/>\n\n\n            </div>\n          );\n    }\n    putID()\n    {\n        let squares = this.state.squares; \n        if( squares.length === 0)\n        {\n            for(let i=0;i<64;i++)\n            {\n                squares.push({id:i,value:0});\n            }\n            this.setState({squares });\n        }\n    }\n}\n \nexport default Board;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Board from './components/board'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Board />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}